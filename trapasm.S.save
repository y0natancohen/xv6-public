;#include "asm.h"
#include "mmu.h"
;#include "syscall.h"
;#include "traps.h"

  # vectors.S sends all traps here.
.globl alltraps
;.globl sigret_syscall
;.globl sigret_syscall_finish
.globl trapret
;.globl trapret2

alltraps:
  # Build trap frame.
  pushl %ds
  pushl %es
  pushl %fs
  pushl %gs
  pushal
  
  # Set up data segments.
  movw $(SEG_KDATA<<3), %ax
  movw %ax, %ds
  movw %ax, %es

  # Call trap(tf), where tf=%esp
  pushl %esp
  call trap
  addl $4, %esp

  # Return falls through to trapret...
trapret:
  pushl %esp
  call handle_pending_signals
  addl $4, %esp
;trapret2:
  popal
  popl %gs
  popl %fs
  popl %es
  popl %ds
  addl $0x8, %esp  # trapno and errcode
  iret

;sigret_syscall:
;  movl $SYS_sigret, %eax
;  int $T_SYSCALL
;sigret_syscall_finish: